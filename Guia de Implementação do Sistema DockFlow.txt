# Guia de Implementação do Sistema DockFlow

Este guia orienta o processo de implementação do sistema DockFlow para gestão de carregamento e armazém, conforme o plano de especificação. Este documento descreve como configurar, instalar e executar o sistema desenvolvido.

## 1. Pré-requisitos

Antes de iniciar a implementação, certifique-se de ter instalado:

- **Node.js** (versão 14.x ou superior)
- **MySQL** (versão 8.x ou superior)
- **Navegador web moderno** (Chrome, Firefox, Edge, etc.)

## 2. Estrutura de Arquivos

O sistema está organizado da seguinte forma:

```
dockflow/
  ├── backend/
  │   ├── config/         (configurações do banco de dados)
  │   ├── middleware/     (middleware de autenticação)
  │   ├── routes/         (rotas da API)
  │   ├── server.js       (arquivo principal do servidor)
  │   └── package.json    (dependências do backend)
  │
  └── frontend/
      ├── assets/         (CSS, imagens, etc.)
      │   └── css/
      │       └── style.css
      ├── js/             (arquivos JavaScript)
      │   ├── auth.js
      │   └── main.js
      ├── pages/          (páginas HTML)
      │   ├── dashboard.html
      │   ├── docks.html
      │   ├── loadings.html
      │   ├── products.html
      │   └── drivers.html
      └── index.html      (página de login)
```

## 3. Configuração do Backend

### 3.1. Instalação de Dependências

1. Navegue até a pasta `backend`:
   ```bash
   cd dockflow/backend
   ```

2. Instale as dependências:
   ```bash
   npm install
   ```

### 3.2. Configuração do Banco de Dados

1. Crie um banco de dados MySQL:
   ```sql
   CREATE DATABASE dockflow_db;
   ```

2. Atualize as credenciais de conexão no arquivo `server.js`:
   ```javascript
   const db = mysql.createConnection({
     host: 'localhost',
     user: 'seu_usuario_mysql',
     password: 'sua_senha_mysql',
     database: 'dockflow_db'
   });
   ```

### 3.3. Iniciar o Servidor

1. Execute o servidor:
   ```bash
   npm start
   ```

2. O servidor estará rodando em `http://localhost:3000`

## 4. Configuração do Frontend

### 4.1. Configuração da URL da API

Se necessário, atualize a URL da API no arquivo `frontend/js/auth.js` e `frontend/js/main.js`:

```javascript
const API_URL = 'http://localhost:3000/api';
```

### 4.2. Servindo o Frontend

Existem várias maneiras de servir o frontend:

**Opção 1:** Usando um servidor web como Apache ou Nginx.
**Opção 2:** Usando uma extensão como "Live Server" no Visual Studio Code.
**Opção 3:** Usando um servidor HTTP simples com Node.js:

```bash
npx http-server frontend -p 8080
```

Após configurar, acesse o sistema em `http://localhost:8080`.

## 5. Primeiro Acesso

### 5.1. Usuário Padrão

Ao iniciar o sistema pela primeira vez, um usuário administrador padrão é criado:

- **Email:** admin@dockflow.com
- **Senha:** admin123

É altamente recomendável alterar esta senha após o primeiro acesso.

### 5.2. Configuração Inicial

Após o primeiro login, recomenda-se:

1. Cadastrar as docas disponíveis no armazém
2. Cadastrar os produtos comumente transportados
3. Cadastrar os motoristas frequentes

## 6. Módulos Implementados (MVP)

O MVP (Produto Mínimo Viável) inclui os seguintes módulos:

1. **Autenticação**: Login e controle de acesso
2. **Dashboard**: Visão geral do sistema com KPIs
3. **Docas**: Gerenciamento de docas
4. **Carregamentos**: Agendamento e controle de carregamentos
5. **Motoristas**: Cadastro e gerenciamento de motoristas
6. **Produtos**: Cadastro e gerenciamento de produtos
7. **Integração com WhatsApp**: Comunicação básica com motoristas

## 7. Próximos Passos (Evolução)

Para evoluir o sistema além do MVP, considere:

1. **Implementar o módulo de armazém completo**: Controle de posições e estoque
2. **Melhorar a integração com WhatsApp**: Usar a API oficial do WhatsApp Business
3. **Desenvolver o módulo de documentação fiscal**: Emissão e controle de DACTEs
4. **Implementar relatórios avançados**: Análises de desempenho e produtividade
5. **Desenvolver aplicativo mobile**: Para operadores em movimento

## 8. Solução de Problemas

### 8.1. Problemas de Conexão com o Banco de Dados

- Verifique se o MySQL está em execução
- Confirme se as credenciais no arquivo `server.js` estão corretas
- Verifique se o banco de dados `dockflow_db` existe

### 8.2. Problemas de Autenticação

- Limpe o localStorage do navegador
- Verifique se o token JWT está sendo gerado corretamente
- Confirme se as requisições estão incluindo o cabeçalho de autorização

### 8.3. Problemas de CORS

Se ocorrerem erros de CORS:

1. Verifique se o servidor backend está configurado para permitir requisições do frontend
2. Certifique-se de que o frontend e o backend estão em domínios/portas permitidos

## 9. Testes Iniciais

Para verificar se a implementação foi bem-sucedida, realize os seguintes testes:

1. **Login**: Verifique se é possível fazer login com o usuário padrão
2. **Cadastro de Docas**: Teste o cadastro, edição e exclusão de docas
3. **Cadastro de Produtos**: Teste o cadastro, edição e exclusão de produtos
4. **Cadastro de Motoristas**: Teste o cadastro, edição e exclusão de motoristas
5. **Carregamentos**: Teste o agendamento de carregamentos, check-in e check-out

## 10. Contato e Suporte

Para obter suporte ou reportar problemas, entre em contato com a equipe de desenvolvimento.

---

Este guia fornece as instruções básicas para implementar o sistema DockFlow. Para informações mais detalhadas sobre funcionalidades específicas, consulte a documentação técnica completa.